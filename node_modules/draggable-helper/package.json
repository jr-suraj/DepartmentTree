{
  "_args": [
    [
      "draggable-helper@1.0.20",
      "/home/suraj/codes/vuetreednd"
    ]
  ],
  "_from": "draggable-helper@1.0.20",
  "_id": "draggable-helper@1.0.20",
  "_inBundle": false,
  "_integrity": "sha512-/ym423hF2cIAIjhPj0SvDClg9aWvhWXxy0eABaXRo3Ofx2IQrsJdwb53geiyLxBQR63owjEHSVeLhjP/DQTq8A==",
  "_location": "/draggable-helper",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "draggable-helper@1.0.20",
    "name": "draggable-helper",
    "escapedName": "draggable-helper",
    "rawSpec": "1.0.20",
    "saveSpec": null,
    "fetchSpec": "1.0.20"
  },
  "_requiredBy": [
    "/vue-draggable-nested-tree"
  ],
  "_resolved": "https://registry.npmjs.org/draggable-helper/-/draggable-helper-1.0.20.tgz",
  "_spec": "1.0.20",
  "_where": "/home/suraj/codes/vuetreednd",
  "author": {
    "name": "phphe",
    "email": "phphe@outlook.com",
    "url": "https://github.com/phphe"
  },
  "bugs": {
    "url": "https://github.com/phphe/draggable-helper/issues"
  },
  "dependencies": {
    "drag-event-service": "0.0.6",
    "helper-js": "^1.3.7"
  },
  "description": "A js library to simplify your drag and drop functions. Start with a element, it will expose hooks(drag, moving, drop). You can stop drag, moving and drop by conditions. You can set minTranslate. Its code is easy, you can check source code. # features * support touch simplify(single touch) * to prevent page scrolling when touch * expose hooks(drag, moving, drop) * prevent drag and moving by return false in hook * set min translate to trigger drag * set the style of dragging element * set the class of dragging element * move the element or move a cloned one * check if event is triggered by mouse left button * to prevent text be selected when dragging # install ```sh npm install draggable-helper ``` # usage & api ```js import draggableHelper from 'draggable-helper' const destroy = draggableHelper(HTMLElement dragHandlerEl, Object opt = {}) // opt // opt will pass to hook, so you can attach custom data into opt, such the data of the element opt = {     // [Object] style, set the style of dragging element     // getStyle(opt), set the style of dragging element     // [String] draggingClass, default dragging, set the class of dragging element     // [Boolean] clone, move the element or move a cloned one     // minTranslate default 10, unit px     // getEl(dragHandlerEl, opt), optional, get the el that will be moved. default is dragHandlerEl     // hook, when drag start     drag(event, opt, store){       // return false to prevent drag     },     // hook, when mouse moving     moving: (e, opt, store) => {       // return false to prevent moving     },     // hook, when drop     drop: (e, opt, store) => {     }, } // store store = {   el   initialMouse   initialOffset   mouse   move   movedCount // start from 0 } ``` # demo [jsfiddle](https://jsfiddle.net/phphe/t694kpua/19/)",
  "devDependencies": {
    "bili": "^3.0.14"
  },
  "homepage": "https://github.com/phphe/draggable-helper#readme",
  "license": "MIT",
  "main": "dist/draggable-helper.cjs.js",
  "module": "dist/draggable-helper.es.js",
  "name": "draggable-helper",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/phphe/draggable-helper.git"
  },
  "scripts": {
    "build": "bili --format cjs,umd,umd-min,es --banner",
    "dev": "bili --format cjs,umd --watch"
  },
  "unpkg": "dist/draggable-helper.js",
  "version": "1.0.20"
}
